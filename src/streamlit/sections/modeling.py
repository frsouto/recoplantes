import streamlit as st

def display():

    # Titre principal
    st.title("üìä Mod√®les Entra√Æn√©s")
    
    # Introduction g√©n√©rale
    st.write("""
    Dans le cadre de notre projet de diagnostic des maladies des plantes, plusieurs mod√®les de Deep Learning ont √©t√© test√©s et optimis√©s. 
    Nous pr√©sentons ici un r√©sum√© des mod√®les utilis√©s, les hyperparam√®tres choisis, ainsi que les d√©fis sp√©cifiques rencontr√©s pendant l'entra√Ænement.
    """)

    # Section pour le CNN
    st.subheader("üß† Convolutional Neural Network (CNN)")
    st.write("""
    Le CNN est une architecture classique adapt√©e √† l'analyse d'images. Elle a √©t√© notre premier choix pour √©tablir une base solide dans la classification des maladies des plantes.
    """)
    st.markdown("**Caract√©ristiques :**")
    st.write("""
    - Couches : Conv2D, MaxPooling, Dense layers.
    - R√©gularisation : Dropout √† 20%.
    """)
    st.markdown("**Hyperparam√®tres :**")
    st.write("""
    - Batch size : 32
    - Learning rate : 0.0001
    - Nombre d'√©poques : 20 (early stopping √† l'√©poque 13 pour √©viter l'overfitting).
    """)
    st.markdown("**D√©fis rencontr√©s :**")
    st.write("""
    - **Overfitting** apr√®s 13 √©poques, n√©cessitant une r√©gularisation suppl√©mentaire via Dropout.
    - Performance globale solide avec une accuracy de validation de 91%, mais n√©cessit√© d'am√©liorer les classes minoritaires.
    """)

    # Section pour MobileNet
    st.subheader("üì± MobileNetV1 - Transfer Learning")
    st.write("""
    MobileNetV1, utilis√© avec du transfer learning, a permis une grande am√©lioration des performances tout en r√©duisant le temps d'entra√Ænement.
    """)
    st.markdown("**Caract√©ristiques :**")
    st.write("""
    - Architecture l√©g√®re avec GlobalAveragePooling pour r√©duire la dimensionnalit√©.
    - Utilisation de Dropout √† 20%.
    """)
    st.markdown("**Hyperparam√®tres :**")
    st.write("""
    - Batch size : 32
    - Learning rate : 0.0001
    - Nombre d'√©poques : 20
    """)
    st.markdown("**R√©sultats :**")
    st.write("""
    - **Accuracy d'entra√Ænement :** 100%
    - **Accuracy de validation :** 99.71% apr√®s stabilisation de la loss √† 0.0149.
    """)

    # Section pour ResNet
    st.subheader("üîó ResNet50 - R√©sultats mitig√©s")
    st.write("""
    ResNet50 a √©t√© test√© pour sa capacit√© √† capturer des d√©tails complexes. Cependant, les contraintes de calcul ont limit√© les possibilit√©s d'ajustement des hyperparam√®tres.
    """)
    st.markdown("**D√©fis rencontr√©s :**")
    st.write("""
    - Temps d'entra√Ænement prolong√© sur Google Colab, ce qui a ralenti les it√©rations.
    - Difficult√© √† stabiliser les performances sur certaines classes malgr√© la puissance de l'architecture.
    """)

# Appel de la fonction pour afficher les d√©tails des mod√®les
if __name__ == "__main__":
    display()

